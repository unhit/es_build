diff -r 9bed4a15d956 CMakeLists.txt
--- a/CMakeLists.txt	Sun Sep 15 15:05:21 2013 -0300
+++ b/CMakeLists.txt	Sat Sep 28 21:52:08 2013 +0200
@@ -17,17 +17,17 @@
 	#set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};E:/Projects/SDK/OgreLatest/CMake/Utils/;E:/Projects/SDK/OgreLatest/CMake/Packages/")
 endif()
 
-if(UNIX)
-	if(EXISTS "/usr/local/lib/OGRE/cmake")
-		set(CMAKE_MODULE_PATH "/usr/local/lib/OGRE/cmake/;${CMAKE_MODULE_PATH}")
-	elseif(EXISTS "/usr/lib/OGRE/cmake")
-		set(CMAKE_MODULE_PATH "/usr/lib/OGRE/cmake/;${CMAKE_MODULE_PATH}")
-	elseif(EXISTS "/usr/share/OGRE/cmake/modules")
-		set(CMAKE_MODULE_PATH "/usr/share/OGRE/cmake/modules;${CMAKE_MODULE_PATH}")
-	else ()
-		message(SEND_ERROR "Failed to find module path.")
-	endif(EXISTS "/usr/local/lib/OGRE/cmake")
-endif(UNIX)
+#if(UNIX)
+#	if(EXISTS "/usr/local/lib/OGRE/cmake")
+#		set(CMAKE_MODULE_PATH "/usr/local/lib/OGRE/cmake/;${CMAKE_MODULE_PATH}")
+#	elseif(EXISTS "/usr/lib/OGRE/cmake")
+#		set(CMAKE_MODULE_PATH "/usr/lib/OGRE/cmake/;${CMAKE_MODULE_PATH}")
+#	elseif(EXISTS "/usr/share/OGRE/cmake/modules")
+#		set(CMAKE_MODULE_PATH "/usr/share/OGRE/cmake/modules;${CMAKE_MODULE_PATH}")
+#	else ()
+#		message(SEND_ERROR "Failed to find module path.")
+#	endif(EXISTS "/usr/local/lib/OGRE/cmake")
+#endif(UNIX)
 
 if (CMAKE_BUILD_TYPE STREQUAL "")
 	# CMake defaults to leaving CMAKE_BUILD_TYPE empty. This screws up
@@ -42,13 +42,11 @@
 FIND_PACKAGE(wxWidgets COMPONENTS core base aui adv REQUIRED)
 include( "${wxWidgets_USE_FILE}" )
 
-FIND_PACKAGE(OGRE COMPONENTS Overlay REQUIRED)
+FIND_PACKAGE(OGRE REQUIRED)
 include_directories( ${OGRE_INCLUDE_DIRS} )
 foreach(dir ${OGRE_INCLUDE_DIRS})
-   set(OGRE_Overlay_INCLUDE_DIR ${dir}/Overlay ${OGRE_Overlay_INCLUDE_DIR})
    set(OGRE_RTSS_INCLUDE_DIR ${dir}/RTShaderSystem ${OGRE_RTSS_INCLUDE_DIR})
 endforeach(dir)
-include_directories( ${OGRE_Overlay_INCLUDE_DIR} )
 include_directories( ${OGRE_RTSS_INCLUDE_DIR} )
 
 if(UNIX)
@@ -105,9 +103,8 @@
 ADD_EXECUTABLE(OgreMeshy WIN32 ${HEADER_FILES} ${SOURCE_FILES} )
 TARGET_LINK_LIBRARIES( OgreMeshy ${wxWidgets_LIBRARIES} )
 TARGET_LINK_LIBRARIES( OgreMeshy ${OGRE_LIBRARIES} )
-set(OGRE_Overlay_LIBRARIES OgreOverlay)
 set(OGRE_RTSS_LIBRARIES OgreRTShaderSystem)
-TARGET_LINK_LIBRARIES( OgreMeshy ${OGRE_Overlay_LIBRARIES} ${OGRE_RTSS_LIBRARIES} )
+TARGET_LINK_LIBRARIES( OgreMeshy ${OGRE_RTSS_LIBRARIES} )
 
 if(UNIX)
 	TARGET_LINK_LIBRARIES( OgreMeshy ${GTK2_LIBRARIES} )
@@ -158,7 +155,7 @@
 #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
 # TODO: add the version variable at the top in here
 SET(CPACK_PACKAGE_VERSION_MAJOR "1")
-SET(CPACK_PACKAGE_VERSION_MINOR "5")
+SET(CPACK_PACKAGE_VERSION_MINOR "4")
 SET(CPACK_PACKAGE_VERSION_PATCH "0")
 SET(CPACK_PACKAGE_INSTALL_DIRECTORY "OgreMeshy")
 
@@ -198,4 +195,4 @@
 	SET(CPACK_SOURCE_STRIP_FILES "")
 ENDIF(WIN32 AND NOT UNIX)
 	#SET(CPACK_PACKAGE_EXECUTABLES "MyExecutable" "My Executable")
-INCLUDE(CPack)
\ No newline at end of file
+INCLUDE(CPack)
diff -r 9bed4a15d956 src/Core/wxOgreMeshViewerMainFrameImpl.cpp
--- a/src/Core/wxOgreMeshViewerMainFrameImpl.cpp	Sun Sep 15 15:05:21 2013 -0300
+++ b/src/Core/wxOgreMeshViewerMainFrameImpl.cpp	Sat Sep 28 21:52:08 2013 +0200
@@ -877,8 +877,7 @@
 			//Reloading the material is necessary because the material may not have been defined
 			//among the resources we're reloading, but this material may be using shaders that no
 			//long exist.
-			Ogre::MaterialPtr pMat = Ogre::MaterialManager::getSingleton().getByName( materialNames[i] ).
-																			staticCast<Ogre::Material>();
+			Ogre::MaterialPtr pMat = Ogre::MaterialManager::getSingleton().getByName( materialNames[i] );
 			pMat->reload();
 			m_meshEntity->getSubEntity(i)->setMaterial( pMat );
 		}
